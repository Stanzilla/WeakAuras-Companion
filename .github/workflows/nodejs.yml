name: Node CI

on: [push]

jobs:
  build_linux:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [11.x]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Cert
      run: openssl aes-256-cbc -K $encrypted_e7df8235be93_key -iv $encrypted_e7df8235be93_iv -in msa_digicert_CI.p12.enc -out msa_digicert_CI.p12 -d;
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: yarn install, build, and test
      run: |
        yarn
        yarn dist
      env:
        CI: true
        
  build_windows:

    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [11.x]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Cert
      run: openssl aes-256-cbc -K $encrypted_e7df8235be93_key -iv $encrypted_e7df8235be93_iv -in msa_digicert_CI.p12.enc -out msa_digicert_CI.p12 -d;
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: yarn install, build, and test
      run: |
        yarn
        yarn dist
      env:
        CI: true
        
  build_mac:

    runs-on: macOS-latest

    strategy:
      matrix:
        node-version: [11.x]

    steps:
    - uses: actions/checkout@v1
    - name: Set up Cert
      run: openssl aes-256-cbc -K $encrypted_e7df8235be93_key -iv $encrypted_e7df8235be93_iv -in msa_digicert_CI.p12.enc -out msa_digicert_CI.p12 -d;
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: yarn install, build, and test
      run: |
        export CERTIFICATE_P12=$CSC_LINK;
        echo $CERTIFICATE_OSX_P12 | base64 â€” decode > $CERTIFICATE_P12;
        export KEYCHAIN=build.keychain;
        security create-keychain -p mysecretpassword $KEYCHAIN;
        security default-keychain -s $KEYCHAIN;
        security unlock-keychain -p mysecretpassword $KEYCHAIN;
        security import $CERTIFICATE_P12 -k $KEYCHAIN -P $CSC_KEY_PASSWORD -T /usr/bin/codesign;
        yarn
        yarn dist
      env:
        CI: true
        CSC_LINK: ${{ secrets.CSC_LINK }}
        CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}  
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        
